State 0:
## Known stack suffix:
##
## LR(1) items:
program' -> . program [ # ]
## Transitions:
-- On error shift to state 1
-- On VAR shift to state 2
-- On variable_decl shift to state 5
-- On program shift to state 7
-- On list(variable_decl) shift to state 8
## Reductions:
-- On MAIN FUNCTION
--   reduce production list(variable_decl) ->

State 1:
## Known stack suffix:
## error
## LR(1) items:
program -> error . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production program -> error

State 2:
## Known stack suffix:
## VAR
## LR(1) items:
variable_decl -> VAR . IDENT SEMI [ WHILE VAR STAR SBRK RETURN PUTCHAR NOT MINUS MAIN LPAR INT IF IDENT FUNCTION END BOOL AMPERSAND ]
## Transitions:
-- On IDENT shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## VAR IDENT
## LR(1) items:
variable_decl -> VAR IDENT . SEMI [ WHILE VAR STAR SBRK RETURN PUTCHAR NOT MINUS MAIN LPAR INT IF IDENT FUNCTION END BOOL AMPERSAND ]
## Transitions:
-- On SEMI shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## VAR IDENT SEMI
## LR(1) items:
variable_decl -> VAR IDENT SEMI . [ WHILE VAR STAR SBRK RETURN PUTCHAR NOT MINUS MAIN LPAR INT IF IDENT FUNCTION END BOOL AMPERSAND ]
## Transitions:
## Reductions:
-- On WHILE VAR STAR SBRK RETURN PUTCHAR NOT MINUS MAIN LPAR INT IF IDENT FUNCTION END BOOL AMPERSAND
--   reduce production variable_decl -> VAR IDENT SEMI

State 5:
## Known stack suffix:
## variable_decl
## LR(1) items:
list(variable_decl) -> variable_decl . list(variable_decl) [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS MAIN LPAR INT IF IDENT FUNCTION END BOOL AMPERSAND ]
## Transitions:
-- On VAR shift to state 2
-- On variable_decl shift to state 5
-- On list(variable_decl) shift to state 6
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS MAIN LPAR INT IF IDENT FUNCTION END BOOL AMPERSAND
--   reduce production list(variable_decl) ->

State 6:
## Known stack suffix:
## variable_decl list(variable_decl)
## LR(1) items:
list(variable_decl) -> variable_decl list(variable_decl) . [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS MAIN LPAR INT IF IDENT FUNCTION END BOOL AMPERSAND ]
## Transitions:
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS MAIN LPAR INT IF IDENT FUNCTION END BOOL AMPERSAND
--   reduce production list(variable_decl) -> variable_decl list(variable_decl)

State 7:
## Known stack suffix:
## program
## LR(1) items:
program' -> program . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept program

State 8:
## Known stack suffix:
## list(variable_decl)
## LR(1) items:
program -> list(variable_decl) . list(function_def) main EOF [ # ]
## Transitions:
-- On FUNCTION shift to state 9
-- On list(function_def) shift to state 128
-- On function_def shift to state 135
## Reductions:
-- On MAIN
--   reduce production list(function_def) ->

State 9:
## Known stack suffix:
## FUNCTION
## LR(1) items:
function_def -> FUNCTION . IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN list(variable_decl) list(instruction) END [ MAIN FUNCTION ]
## Transitions:
-- On IDENT shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## FUNCTION IDENT
## LR(1) items:
function_def -> FUNCTION IDENT . LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN list(variable_decl) list(instruction) END [ MAIN FUNCTION ]
## Transitions:
-- On LPAR shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## FUNCTION IDENT LPAR
## LR(1) items:
function_def -> FUNCTION IDENT LPAR . loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN list(variable_decl) list(instruction) END [ MAIN FUNCTION ]
## Transitions:
-- On IDENT shift to state 12
-- On separated_nonempty_list(COMMA,IDENT) shift to state 15
-- On loption(separated_nonempty_list(COMMA,IDENT)) shift to state 16
## Reductions:
-- On RPAR
--   reduce production loption(separated_nonempty_list(COMMA,IDENT)) ->

State 12:
## Known stack suffix:
## IDENT
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT . [ RPAR ]
separated_nonempty_list(COMMA,IDENT) -> IDENT . COMMA separated_nonempty_list(COMMA,IDENT) [ RPAR ]
## Transitions:
-- On COMMA shift to state 13
## Reductions:
-- On RPAR
--   reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT

State 13:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA . separated_nonempty_list(COMMA,IDENT) [ RPAR ]
## Transitions:
-- On IDENT shift to state 12
-- On separated_nonempty_list(COMMA,IDENT) shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## IDENT COMMA separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA separated_nonempty_list(COMMA,IDENT) . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production separated_nonempty_list(COMMA,IDENT) -> IDENT COMMA separated_nonempty_list(COMMA,IDENT)

State 15:
## Known stack suffix:
## separated_nonempty_list(COMMA,IDENT)
## LR(1) items:
loption(separated_nonempty_list(COMMA,IDENT)) -> separated_nonempty_list(COMMA,IDENT) . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production loption(separated_nonempty_list(COMMA,IDENT)) -> separated_nonempty_list(COMMA,IDENT)

State 16:
## Known stack suffix:
## FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT))
## LR(1) items:
function_def -> FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) . RPAR BEGIN list(variable_decl) list(instruction) END [ MAIN FUNCTION ]
## Transitions:
-- On RPAR shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR
## LR(1) items:
function_def -> FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR . BEGIN list(variable_decl) list(instruction) END [ MAIN FUNCTION ]
## Transitions:
-- On BEGIN shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN
## LR(1) items:
function_def -> FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN . list(variable_decl) list(instruction) END [ MAIN FUNCTION ]
## Transitions:
-- On VAR shift to state 2
-- On variable_decl shift to state 5
-- On list(variable_decl) shift to state 19
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND
--   reduce production list(variable_decl) ->

State 19:
## Known stack suffix:
## FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN list(variable_decl)
## LR(1) items:
function_def -> FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN list(variable_decl) . list(instruction) END [ MAIN FUNCTION ]
## Transitions:
-- On WHILE shift to state 20
-- On STAR shift to state 86
-- On SBRK shift to state 23
-- On RETURN shift to state 91
-- On PUTCHAR shift to state 94
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IF shift to state 99
-- On IDENT shift to state 104
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On list(instruction) shift to state 126
-- On instruction shift to state 114
-- On expression shift to state 116
## Reductions:
-- On END
--   reduce production list(instruction) ->

State 20:
## Known stack suffix:
## WHILE
## LR(1) items:
instruction -> WHILE . LPAR expression RPAR BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On LPAR shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## WHILE LPAR
## LR(1) items:
instruction -> WHILE LPAR . expression RPAR BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 83
## Reductions:

State 22:
## Known stack suffix:
## STAR
## LR(1) items:
expression -> STAR . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 82
## Reductions:

State 23:
## Known stack suffix:
## SBRK
## LR(1) items:
expression -> SBRK . LPAR expression RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On LPAR shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## SBRK LPAR
## LR(1) items:
expression -> SBRK LPAR . expression RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 80
## Reductions:

State 25:
## Known stack suffix:
## NOT
## LR(1) items:
expression -> NOT . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 79
## Reductions:

State 26:
## Known stack suffix:
## MINUS
## LR(1) items:
expression -> MINUS . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 78
## Reductions:

State 27:
## Known stack suffix:
## LPAR
## LR(1) items:
expression -> LPAR . expression RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> LPAR . expression RPAR LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 73
## Reductions:

State 28:
## Known stack suffix:
## INT
## LR(1) items:
expression -> INT . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND
--   reduce production expression -> INT

State 29:
## Known stack suffix:
## IDENT
## LR(1) items:
expression -> IDENT . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> IDENT . LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On LPAR shift to state 30
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND
--   reduce production expression -> IDENT

State 30:
## Known stack suffix:
## IDENT LPAR
## LR(1) items:
expression -> IDENT LPAR . loption(separated_nonempty_list(COMMA,expression)) RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On separated_nonempty_list(COMMA,expression) shift to state 34
-- On loption(separated_nonempty_list(COMMA,expression)) shift to state 35
-- On expression shift to state 37
## Reductions:
-- On RPAR
--   reduce production loption(separated_nonempty_list(COMMA,expression)) ->

State 31:
## Known stack suffix:
## BOOL
## LR(1) items:
expression -> BOOL . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND
--   reduce production expression -> BOOL

State 32:
## Known stack suffix:
## AMPERSAND
## LR(1) items:
expression -> AMPERSAND . IDENT [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On IDENT shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## AMPERSAND IDENT
## LR(1) items:
expression -> AMPERSAND IDENT . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND
--   reduce production expression -> AMPERSAND IDENT

State 34:
## Known stack suffix:
## separated_nonempty_list(COMMA,expression)
## LR(1) items:
loption(separated_nonempty_list(COMMA,expression)) -> separated_nonempty_list(COMMA,expression) . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production loption(separated_nonempty_list(COMMA,expression)) -> separated_nonempty_list(COMMA,expression)

State 35:
## Known stack suffix:
## IDENT LPAR loption(separated_nonempty_list(COMMA,expression))
## LR(1) items:
expression -> IDENT LPAR loption(separated_nonempty_list(COMMA,expression)) . RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On RPAR shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## IDENT LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR
## LR(1) items:
expression -> IDENT LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND
--   reduce production expression -> IDENT LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR

State 37:
## Known stack suffix:
## expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
separated_nonempty_list(COMMA,expression) -> expression . [ RPAR ]
separated_nonempty_list(COMMA,expression) -> expression . COMMA separated_nonempty_list(COMMA,expression) [ RPAR ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On COMMA shift to state 71
-- On AND shift to state 69
## Reductions:
-- On RPAR
--   reduce production separated_nonempty_list(COMMA,expression) -> expression

State 38:
## Known stack suffix:
## expression STAR
## LR(1) items:
expression -> expression STAR . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## expression STAR expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression STAR expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression STAR expression

State 40:
## Known stack suffix:
## expression LSR
## LR(1) items:
expression -> expression LSR . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## expression LSR expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression LSR expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On LBRACKET shift to state 42
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE GT GE EQ COMMA AND
--   reduce production expression -> expression LSR expression

State 42:
## Known stack suffix:
## expression LBRACKET
## LR(1) items:
expression -> expression LBRACKET . expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## expression LBRACKET expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression LBRACKET expression . RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On RBRACKET shift to state 48
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 44:
## Known stack suffix:
## expression SLASH
## LR(1) items:
expression -> expression SLASH . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## expression SLASH expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression SLASH expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression SLASH expression

State 46:
## Known stack suffix:
## expression LSL
## LR(1) items:
expression -> expression LSL . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 47
## Reductions:

State 47:
## Known stack suffix:
## expression LSL expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression LSL expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On LBRACKET shift to state 42
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE GT GE EQ COMMA AND
--   reduce production expression -> expression LSL expression

State 48:
## Known stack suffix:
## expression LBRACKET expression RBRACKET
## LR(1) items:
expression -> expression LBRACKET expression RBRACKET . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND
--   reduce production expression -> expression LBRACKET expression RBRACKET

State 49:
## Known stack suffix:
## expression PRCT
## LR(1) items:
expression -> expression PRCT . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## expression PRCT expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression PRCT expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression PRCT expression

State 51:
## Known stack suffix:
## expression PLUS
## LR(1) items:
expression -> expression PLUS . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## expression PLUS expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression PLUS expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On SET SEMI RPAR RBRACKET PLUS OR NEQ MINUS LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression PLUS expression

State 53:
## Known stack suffix:
## expression OR
## LR(1) items:
expression -> expression OR . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## expression OR expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression OR expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
## Reductions:
-- On SET SEMI RPAR RBRACKET OR COMMA AND
--   reduce production expression -> expression OR expression

State 55:
## Known stack suffix:
## expression NEQ
## LR(1) items:
expression -> expression NEQ . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## expression NEQ expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression NEQ expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On MINUS shift to state 57
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On SET SEMI RPAR RBRACKET OR NEQ LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression NEQ expression

State 57:
## Known stack suffix:
## expression MINUS
## LR(1) items:
expression -> expression MINUS . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## expression MINUS expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression MINUS expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On SET SEMI RPAR RBRACKET PLUS OR NEQ MINUS LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression MINUS expression

State 59:
## Known stack suffix:
## expression LT
## LR(1) items:
expression -> expression LT . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## expression LT expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression LT expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On MINUS shift to state 57
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On SET SEMI RPAR RBRACKET OR NEQ LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression LT expression

State 61:
## Known stack suffix:
## expression LE
## LR(1) items:
expression -> expression LE . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## expression LE expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression LE expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On MINUS shift to state 57
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On SET SEMI RPAR RBRACKET OR NEQ LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression LE expression

State 63:
## Known stack suffix:
## expression GT
## LR(1) items:
expression -> expression GT . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## expression GT expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression GT expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On MINUS shift to state 57
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On SET SEMI RPAR RBRACKET OR NEQ LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression GT expression

State 65:
## Known stack suffix:
## expression GE
## LR(1) items:
expression -> expression GE . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## expression GE expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression GE expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On MINUS shift to state 57
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On SET SEMI RPAR RBRACKET OR NEQ LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression GE expression

State 67:
## Known stack suffix:
## expression EQ
## LR(1) items:
expression -> expression EQ . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## expression EQ expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression EQ expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On MINUS shift to state 57
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On SET SEMI RPAR RBRACKET OR NEQ LT LE GT GE EQ COMMA AND
--   reduce production expression -> expression EQ expression

State 69:
## Known stack suffix:
## expression AND
## LR(1) items:
expression -> expression AND . expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## expression AND expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression AND expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
## Reductions:
-- On SET SEMI RPAR RBRACKET OR COMMA AND
--   reduce production expression -> expression AND expression

State 71:
## Known stack suffix:
## expression COMMA
## LR(1) items:
separated_nonempty_list(COMMA,expression) -> expression COMMA . separated_nonempty_list(COMMA,expression) [ RPAR ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On separated_nonempty_list(COMMA,expression) shift to state 72
-- On expression shift to state 37
## Reductions:

State 72:
## Known stack suffix:
## expression COMMA separated_nonempty_list(COMMA,expression)
## LR(1) items:
separated_nonempty_list(COMMA,expression) -> expression COMMA separated_nonempty_list(COMMA,expression) . [ RPAR ]
## Transitions:
## Reductions:
-- On RPAR
--   reduce production separated_nonempty_list(COMMA,expression) -> expression COMMA separated_nonempty_list(COMMA,expression)

State 73:
## Known stack suffix:
## LPAR expression
## LR(1) items:
expression -> LPAR expression . RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PLUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> LPAR expression . RPAR LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On RPAR shift to state 74
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 74:
## Known stack suffix:
## LPAR expression RPAR
## LR(1) items:
expression -> LPAR expression RPAR . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> LPAR expression RPAR . LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On LPAR shift to state 75
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND
--   reduce production expression -> LPAR expression RPAR

State 75:
## Known stack suffix:
## LPAR expression RPAR LPAR
## LR(1) items:
expression -> LPAR expression RPAR LPAR . loption(separated_nonempty_list(COMMA,expression)) RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On separated_nonempty_list(COMMA,expression) shift to state 34
-- On loption(separated_nonempty_list(COMMA,expression)) shift to state 76
-- On expression shift to state 37
## Reductions:
-- On RPAR
--   reduce production loption(separated_nonempty_list(COMMA,expression)) ->

State 76:
## Known stack suffix:
## LPAR expression RPAR LPAR loption(separated_nonempty_list(COMMA,expression))
## LR(1) items:
expression -> LPAR expression RPAR LPAR loption(separated_nonempty_list(COMMA,expression)) . RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On RPAR shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## LPAR expression RPAR LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR
## LR(1) items:
expression -> LPAR expression RPAR LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND
--   reduce production expression -> LPAR expression RPAR LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR

State 78:
## Known stack suffix:
## MINUS expression
## LR(1) items:
expression -> MINUS expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On PRCT shift to state 49
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On SET SEMI RPAR RBRACKET PLUS OR NEQ MINUS LT LE GT GE EQ COMMA AND
--   reduce production expression -> MINUS expression

State 79:
## Known stack suffix:
## NOT expression
## LR(1) items:
expression -> NOT expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On LBRACKET shift to state 42
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE GT GE EQ COMMA AND
--   reduce production expression -> NOT expression

State 80:
## Known stack suffix:
## SBRK LPAR expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> SBRK LPAR expression . RPAR [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On RPAR shift to state 81
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 81:
## Known stack suffix:
## SBRK LPAR expression RPAR
## LR(1) items:
expression -> SBRK LPAR expression RPAR . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND
--   reduce production expression -> SBRK LPAR expression RPAR

State 82:
## Known stack suffix:
## STAR expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> STAR expression . [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ COMMA AND ]
## Transitions:
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On STAR SLASH SET SEMI RPAR RBRACKET PRCT PLUS OR NEQ MINUS LT LE GT GE EQ COMMA AND
--   reduce production expression -> STAR expression

State 83:
## Known stack suffix:
## WHILE LPAR expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> WHILE LPAR expression . RPAR BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On RPAR shift to state 84
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 84:
## Known stack suffix:
## WHILE LPAR expression RPAR
## LR(1) items:
instruction -> WHILE LPAR expression RPAR . BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On BEGIN shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## WHILE LPAR expression RPAR BEGIN
## LR(1) items:
instruction -> WHILE LPAR expression RPAR BEGIN . list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On WHILE shift to state 20
-- On STAR shift to state 86
-- On SBRK shift to state 23
-- On RETURN shift to state 91
-- On PUTCHAR shift to state 94
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IF shift to state 99
-- On IDENT shift to state 104
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On list(instruction) shift to state 124
-- On instruction shift to state 114
-- On expression shift to state 116
## Reductions:
-- On END
--   reduce production list(instruction) ->

State 86:
## Known stack suffix:
## STAR
## LR(1) items:
expression -> STAR . expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> STAR . expression SET expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## STAR expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> STAR expression . [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SET SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> STAR expression . SET expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On SET shift to state 88
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LBRACKET shift to state 42
## Reductions:
-- On STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LE GT GE EQ AND
--   reduce production expression -> STAR expression

State 88:
## Known stack suffix:
## STAR expression SET
## LR(1) items:
instruction -> STAR expression SET . expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## STAR expression SET expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> STAR expression SET expression . SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On SEMI shift to state 90
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 90:
## Known stack suffix:
## STAR expression SET expression SEMI
## LR(1) items:
instruction -> STAR expression SET expression SEMI . [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND
--   reduce production instruction -> STAR expression SET expression SEMI

State 91:
## Known stack suffix:
## RETURN
## LR(1) items:
instruction -> RETURN . expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## RETURN expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> RETURN expression . SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On SEMI shift to state 93
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 93:
## Known stack suffix:
## RETURN expression SEMI
## LR(1) items:
instruction -> RETURN expression SEMI . [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND
--   reduce production instruction -> RETURN expression SEMI

State 94:
## Known stack suffix:
## PUTCHAR
## LR(1) items:
instruction -> PUTCHAR . LPAR expression RPAR SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On LPAR shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## PUTCHAR LPAR
## LR(1) items:
instruction -> PUTCHAR LPAR . expression RPAR SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## PUTCHAR LPAR expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> PUTCHAR LPAR expression . RPAR SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On RPAR shift to state 97
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 97:
## Known stack suffix:
## PUTCHAR LPAR expression RPAR
## LR(1) items:
instruction -> PUTCHAR LPAR expression RPAR . SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On SEMI shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## PUTCHAR LPAR expression RPAR SEMI
## LR(1) items:
instruction -> PUTCHAR LPAR expression RPAR SEMI . [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND
--   reduce production instruction -> PUTCHAR LPAR expression RPAR SEMI

State 99:
## Known stack suffix:
## IF
## LR(1) items:
instruction -> IF . LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On LPAR shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## IF LPAR
## LR(1) items:
instruction -> IF LPAR . expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 101
## Reductions:

State 101:
## Known stack suffix:
## IF LPAR expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH RPAR PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> IF LPAR expression . RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On RPAR shift to state 102
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 102:
## Known stack suffix:
## IF LPAR expression RPAR
## LR(1) items:
instruction -> IF LPAR expression RPAR . BEGIN list(instruction) END ELSE BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On BEGIN shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## IF LPAR expression RPAR BEGIN
## LR(1) items:
instruction -> IF LPAR expression RPAR BEGIN . list(instruction) END ELSE BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On WHILE shift to state 20
-- On STAR shift to state 86
-- On SBRK shift to state 23
-- On RETURN shift to state 91
-- On PUTCHAR shift to state 94
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IF shift to state 99
-- On IDENT shift to state 104
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On list(instruction) shift to state 108
-- On instruction shift to state 114
-- On expression shift to state 116
## Reductions:
-- On END
--   reduce production list(instruction) ->

State 104:
## Known stack suffix:
## IDENT
## LR(1) items:
expression -> IDENT . [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> IDENT . LPAR loption(separated_nonempty_list(COMMA,expression)) RPAR [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> IDENT . SET expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On SET shift to state 105
-- On LPAR shift to state 30
## Reductions:
-- On STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND
--   reduce production expression -> IDENT

State 105:
## Known stack suffix:
## IDENT SET
## LR(1) items:
instruction -> IDENT SET . expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## IDENT SET expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> IDENT SET expression . SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On SEMI shift to state 107
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 107:
## Known stack suffix:
## IDENT SET expression SEMI
## LR(1) items:
instruction -> IDENT SET expression SEMI . [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND
--   reduce production instruction -> IDENT SET expression SEMI

State 108:
## Known stack suffix:
## IF LPAR expression RPAR BEGIN list(instruction)
## LR(1) items:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) . END ELSE BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On END shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## IF LPAR expression RPAR BEGIN list(instruction) END
## LR(1) items:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END . ELSE BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On ELSE shift to state 110
## Reductions:

State 110:
## Known stack suffix:
## IF LPAR expression RPAR BEGIN list(instruction) END ELSE
## LR(1) items:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE . BEGIN list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On BEGIN shift to state 111
## Reductions:

State 111:
## Known stack suffix:
## IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN
## LR(1) items:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN . list(instruction) END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On WHILE shift to state 20
-- On STAR shift to state 86
-- On SBRK shift to state 23
-- On RETURN shift to state 91
-- On PUTCHAR shift to state 94
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IF shift to state 99
-- On IDENT shift to state 104
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On list(instruction) shift to state 112
-- On instruction shift to state 114
-- On expression shift to state 116
## Reductions:
-- On END
--   reduce production list(instruction) ->

State 112:
## Known stack suffix:
## IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction)
## LR(1) items:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) . END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On END shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END
## LR(1) items:
instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END . [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND
--   reduce production instruction -> IF LPAR expression RPAR BEGIN list(instruction) END ELSE BEGIN list(instruction) END

State 114:
## Known stack suffix:
## instruction
## LR(1) items:
list(instruction) -> instruction . list(instruction) [ END ]
## Transitions:
-- On WHILE shift to state 20
-- On STAR shift to state 86
-- On SBRK shift to state 23
-- On RETURN shift to state 91
-- On PUTCHAR shift to state 94
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IF shift to state 99
-- On IDENT shift to state 104
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On list(instruction) shift to state 115
-- On instruction shift to state 114
-- On expression shift to state 116
## Reductions:
-- On END
--   reduce production list(instruction) ->

State 115:
## Known stack suffix:
## instruction list(instruction)
## LR(1) items:
list(instruction) -> instruction list(instruction) . [ END ]
## Transitions:
## Reductions:
-- On END
--   reduce production list(instruction) -> instruction list(instruction)

State 116:
## Known stack suffix:
## expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> expression . SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
instruction -> expression . LBRACKET expression RBRACKET SET expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On SEMI shift to state 117
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 118
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 117:
## Known stack suffix:
## expression SEMI
## LR(1) items:
instruction -> expression SEMI . [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND
--   reduce production instruction -> expression SEMI

State 118:
## Known stack suffix:
## expression LBRACKET
## LR(1) items:
expression -> expression LBRACKET . expression RBRACKET [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> expression LBRACKET . expression RBRACKET SET expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## expression LBRACKET expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH RBRACKET PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression LBRACKET expression . RBRACKET [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> expression LBRACKET expression . RBRACKET SET expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On RBRACKET shift to state 120
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 120:
## Known stack suffix:
## expression LBRACKET expression RBRACKET
## LR(1) items:
expression -> expression LBRACKET expression RBRACKET . [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> expression LBRACKET expression RBRACKET . SET expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On SET shift to state 121
## Reductions:
-- On STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND
--   reduce production expression -> expression LBRACKET expression RBRACKET

State 121:
## Known stack suffix:
## expression LBRACKET expression RBRACKET SET
## LR(1) items:
instruction -> expression LBRACKET expression RBRACKET SET . expression SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 22
-- On SBRK shift to state 23
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IDENT shift to state 29
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On expression shift to state 122
## Reductions:

State 122:
## Known stack suffix:
## expression LBRACKET expression RBRACKET SET expression
## LR(1) items:
expression -> expression . PLUS expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . MINUS expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . STAR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . SLASH expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . PRCT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSL expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LSR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . EQ expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . NEQ expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LE expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GT expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . GE expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . AND expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . OR expression [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
expression -> expression . LBRACKET expression RBRACKET [ STAR SLASH SEMI PRCT PLUS OR NEQ MINUS LT LSR LSL LE LBRACKET GT GE EQ AND ]
instruction -> expression LBRACKET expression RBRACKET SET expression . SEMI [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On STAR shift to state 38
-- On SLASH shift to state 44
-- On SEMI shift to state 123
-- On PRCT shift to state 49
-- On PLUS shift to state 51
-- On OR shift to state 53
-- On NEQ shift to state 55
-- On MINUS shift to state 57
-- On LT shift to state 59
-- On LSR shift to state 40
-- On LSL shift to state 46
-- On LE shift to state 61
-- On LBRACKET shift to state 42
-- On GT shift to state 63
-- On GE shift to state 65
-- On EQ shift to state 67
-- On AND shift to state 69
## Reductions:

State 123:
## Known stack suffix:
## expression LBRACKET expression RBRACKET SET expression SEMI
## LR(1) items:
instruction -> expression LBRACKET expression RBRACKET SET expression SEMI . [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND
--   reduce production instruction -> expression LBRACKET expression RBRACKET SET expression SEMI

State 124:
## Known stack suffix:
## WHILE LPAR expression RPAR BEGIN list(instruction)
## LR(1) items:
instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) . END [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
-- On END shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## WHILE LPAR expression RPAR BEGIN list(instruction) END
## LR(1) items:
instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END . [ WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND ]
## Transitions:
## Reductions:
-- On WHILE STAR SBRK RETURN PUTCHAR NOT MINUS LPAR INT IF IDENT END BOOL AMPERSAND
--   reduce production instruction -> WHILE LPAR expression RPAR BEGIN list(instruction) END

State 126:
## Known stack suffix:
## FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN list(variable_decl) list(instruction)
## LR(1) items:
function_def -> FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN list(variable_decl) list(instruction) . END [ MAIN FUNCTION ]
## Transitions:
-- On END shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN list(variable_decl) list(instruction) END
## LR(1) items:
function_def -> FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN list(variable_decl) list(instruction) END . [ MAIN FUNCTION ]
## Transitions:
## Reductions:
-- On MAIN FUNCTION
--   reduce production function_def -> FUNCTION IDENT LPAR loption(separated_nonempty_list(COMMA,IDENT)) RPAR BEGIN list(variable_decl) list(instruction) END

State 128:
## Known stack suffix:
## list(variable_decl) list(function_def)
## LR(1) items:
program -> list(variable_decl) list(function_def) . main EOF [ # ]
## Transitions:
-- On MAIN shift to state 129
-- On main shift to state 133
## Reductions:

State 129:
## Known stack suffix:
## MAIN
## LR(1) items:
main -> MAIN . BEGIN list(instruction) END [ EOF ]
## Transitions:
-- On BEGIN shift to state 130
## Reductions:

State 130:
## Known stack suffix:
## MAIN BEGIN
## LR(1) items:
main -> MAIN BEGIN . list(instruction) END [ EOF ]
## Transitions:
-- On WHILE shift to state 20
-- On STAR shift to state 86
-- On SBRK shift to state 23
-- On RETURN shift to state 91
-- On PUTCHAR shift to state 94
-- On NOT shift to state 25
-- On MINUS shift to state 26
-- On LPAR shift to state 27
-- On INT shift to state 28
-- On IF shift to state 99
-- On IDENT shift to state 104
-- On BOOL shift to state 31
-- On AMPERSAND shift to state 32
-- On list(instruction) shift to state 131
-- On instruction shift to state 114
-- On expression shift to state 116
## Reductions:
-- On END
--   reduce production list(instruction) ->

State 131:
## Known stack suffix:
## MAIN BEGIN list(instruction)
## LR(1) items:
main -> MAIN BEGIN list(instruction) . END [ EOF ]
## Transitions:
-- On END shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## MAIN BEGIN list(instruction) END
## LR(1) items:
main -> MAIN BEGIN list(instruction) END . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production main -> MAIN BEGIN list(instruction) END

State 133:
## Known stack suffix:
## list(variable_decl) list(function_def) main
## LR(1) items:
program -> list(variable_decl) list(function_def) main . EOF [ # ]
## Transitions:
-- On EOF shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## list(variable_decl) list(function_def) main EOF
## LR(1) items:
program -> list(variable_decl) list(function_def) main EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production program -> list(variable_decl) list(function_def) main EOF

State 135:
## Known stack suffix:
## function_def
## LR(1) items:
list(function_def) -> function_def . list(function_def) [ MAIN ]
## Transitions:
-- On FUNCTION shift to state 9
-- On list(function_def) shift to state 136
-- On function_def shift to state 135
## Reductions:
-- On MAIN
--   reduce production list(function_def) ->

State 136:
## Known stack suffix:
## function_def list(function_def)
## LR(1) items:
list(function_def) -> function_def list(function_def) . [ MAIN ]
## Transitions:
## Reductions:
-- On MAIN
--   reduce production list(function_def) -> function_def list(function_def)

